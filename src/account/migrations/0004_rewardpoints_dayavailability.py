# Generated by Django 5.1.1 on 2025-01-20 09:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("account", "0003_customer_specialist"),
    ]

    operations = [
        migrations.CreateModel(
            name="RewardPoints",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("points", models.IntegerField(help_text="Number of points awarded")),
                (
                    "customer",
                    models.ForeignKey(
                        help_text="Customer who earned these points",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reward_points",
                        to="account.customer",
                    ),
                ),
                (
                    "specialist",
                    models.ForeignKey(
                        help_text="Specialist who awarded these points",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="awarded_points",
                        to="account.specialist",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="DayAvailability",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "day_of_week",
                    models.IntegerField(
                        choices=[
                            (0, "Sunday"),
                            (1, "Monday"),
                            (2, "Tuesday"),
                            (3, "Wednesday"),
                            (4, "Thursday"),
                            (5, "Friday"),
                            (6, "Saturday"),
                        ],
                        help_text="Day of week (0=Sunday through 6=Saturday)",
                    ),
                ),
                (
                    "start_time",
                    models.TimeField(
                        help_text="Time when specialist starts being available"
                    ),
                ),
                (
                    "end_time",
                    models.TimeField(
                        help_text="Time when specialist stops being available"
                    ),
                ),
                (
                    "specialist",
                    models.ForeignKey(
                        help_text="The specialist this availability belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="availabilities",
                        to="account.specialist",
                    ),
                ),
            ],
            options={
                "verbose_name": "Day Availability",
                "verbose_name_plural": "Day Availabilities",
                "ordering": ["day_of_week", "start_time"],
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("start_time__lt", models.F("end_time"))),
                        name="start_time_before_end_time",
                    )
                ],
            },
        ),
    ]
